DEVOPS:---filed/domain

Dev ---> ops Process, Tools & Terminology:

Dev means Development of the code/logic/functionality.
push to (github/bitbucket/gitlab)

ops means operational part(DEVOPSengineer/team)
(move the code)...
 
combine we call DEV + OPS = DEVOPS

AGILE Model.

its a set of stages:
pipeline - a set of stages/tasks....

definition:-
DEVOPS is a set of practise,tools and a cultural 
philosophy(AGILE) that automates and integrate 
the processes between software development.

consist of 7-8 phases, 
at each phase/stage we use different tool..

1. DEV Part DEVELOPMENT:

1. Plan/Planning - Devops should adopt agile SDLC to 
improve speed and quality. 
agile helps teams to break work into smaller 
peices to deliver qulaity project/software.

Team- TCS - 7-11 Team-memebr.. 2python, 2tester, 
2devops 1TL, 1M, 3UI etc.

Call/Meet - Scrum master - (stand-up call)
stand-up call = at 10:00Am or 11:00Am
3 questions:
1. what you have done yesterday?
2. what you are going to do today?
3. any blocker point?

2 module implement python - yes TL

2python - 2 modules-- plan kree. 
Software Requirement Specification -->
Q. kaise impelemnt kre? Q.what's the logic
Q. is it reusable?

tools used - JIRA, Confluence

JIRA - jira is project management tool used for issue 
tracking or bugs tracking...

Confluence - Internal Documentation purpose .... 

Discuss SPRINT: 2 weeks time- 10working days, 4holidays.
SPRINT PLANNING meeting - 1H
1. tasks groom,
2. delivery deadline.
 

2. Coding - Actual implementation of the code. 
GIT offers support for branching and merging the code. 
--do the code on local and push/store in GITLAB..
 
Tools: GIT - local install
access -  GITHUB, BITBUCKET, GITLAB

3. Building the CODE- Run the unit test cases and 
integrate, Build the 
code ex - .war file in our projects..

tools - Gradle, MAVEN

4. Testing - Software Tester to test the module 
functioanlity. ---->SRS
We perform testing to ensure correctness of the software.
test and code and move it to next phase.

tools - Selenuim, junit..

------------------------------------------------
part2  - ops

JENKINS (CI-CD Tool) - 
it is a java based open source automation platform with
plugins designed for Continuous code Integration & 
Continuous Deployment to the Virtual Machine/Server.

CI - Continuous Integration...(code/module & build)
CD - Continuous Deployment...(deploy to Virtual Machine)

CI - continuously take the commits and build from git/
github.

CD - continuously deploy to respective server..

again its a team work..


Tools - JENKINS, BAMBOO.....

2. OPS Part:
4 module is ready...

5. Release - 
release to several intermediate environments...

shared resource ---- multiple teams...


dev branch(10module) - 2module merge dev 12

git merge dev




 
6. Deploy -
It actually deployes in Virtual Machine which 
runs 24 by 7.

 
7. Operate -
operate for 2-3 days...

 
8. Monitor - 
later comes in continuous monitoring...
VM, Workspace, RAM, MEMORY, CPU Utilization,
-->Alerts of ram, cpu, memory usage 100GB --- 75GB full
alerts to inform team that -- 75% + usage is exhausted..




Final procedure:

release process....
crete the new branch.
add your code/test case to this branch
push this branch to remote location
merge in dev - create pull request - github/bitbucket

pick dev branch merge in release/uat/pre-prod..testing
pick release branch merge in Production.. do testing
production deployment is successfull.. good work...


How to install jenkins:
1. downloan and install jdk 1.7 version.
verify command- java -version
link - https://www.oracle.com/java/technologies/downloads/#jdk17-windows

2. download .war file of jenkins..
link - https://www.jenkins.io/download/ 
open the .war in command propmt

3. open in command prompt & start running the command
java -jar <path of .war file> #C:\Users\ADMIN\Downloads\jenkins.war
press the enter.

copy the password in diff file for backup purpose.

4. open browser and type localhost:8080
paste the above copy password here..

5. Enter the password
save and continue.

6.only to install suggested plugins.....

7. it will take 20-25 mins to install important plugins.

8. create any user to log in for first time....

9. Finally you will get the wolcome page...

10. installation done..

CI/CD tool is jenkins....

see all option in the jenkins window..

---------------------------------------------
 

DOCKER:- 
Docker is a software deployment platform 
for virtualization with multiple 
Operating systems running on the 
same host. It helps to separate 
infrastructure and applications in 
order to deliver software quickly.

www.google.com
www.instagram.com





docker installation:

open web browser
visit docs.docker.com
download and install
select docker desktop for windows.
just download the installation file 
'docker desktop for windows'

around 500MB in size..
go to download folder and run it.
will start the installation ........
it will be done in few minutes.

close the installation & restart the computer 
becuase its big tool.

after that open docker & accept the 
terms n condition.
also we have to install wsL2 linux kernel
to use as command prompt.
click on the link in the message.
this will download .msi file.

run the wsl2 .msi file
restart the laptop again..

open powershell
start docker desktop.



-------------------------------------


1. Docker version: 
We usually start by finding the installed version 
of docker that we are working on. 
Here is how to find it 
command - docker --version
output:- Docker version 18.09.6, build 481bc77

2. Docker search 
The “docker search” command searches for specific 
images through the Docker hub. 
This command returns the specific information, 
including image name, description, automated, 
official stars, etc. 
Here is how to use it – 

comand - docker search MySQL

You can use the Docker Hub website to search through the GUI-based option.

3. docker pull
As the name suggests, this command pulls a specific 
image from the Docker Hub. All you have to do is use 
the command ‘docker pull’ along with the name of the 
image. 

command - docker pull <image_name>

4. Docker run 
This command is used to create a container from an image.
 Here is how to do it –

docker run --env MYSQL_ROOT_PASSWORD=my-secret-pw 
--detach mysql

5. Docker ps
This command is used to list all the running 
containers in the background. 
Here is how to do it –

docker ps --all

6. Docker stop 
The ‘docker stop’ command stops a container 
using the container name or its id. 
Here is how to do it –

image_id or image_name

docker stop f8c52bedeecc




7. Docker restart 
This command is used to restart the stopped container. 
It is recommended to use this after 
rebooting the system. 
Here is how to do it –

docker restart f8c52bedeecc

8. Docker kill
This command is used to stop the container 
immediately by killing its execution. 
While the ‘docker stop’ command helps shut down 
the container in its own time, 
the ‘docker kill’ command stops it at once.

command - docker kill 09ca6feb6efc

9. Docker exec 
This command is used to access the container 
that is running. 
Here is how to use it –

docker exec -it test_db bash
mysql -uroot -pmy-secret-pw
SHOW DATABASES;

10. Docker push 
This command helps push or upload a 
docker image on the repository or the docker hub.

11. Docker rmi 
This command is used to free up some disk space. 
The image id is used to remove the image while 
using this command.

docker rmi eb0e825dc3cf

12. Docker logs   
This command is used to check the logs of all the 
docker containers with the corresponding 
contained id mentioned in the command.

command - docker logs 09ca6feb6efc



Kubernetes:

Kubernetes or k8s used for container orchestration.

It provides users with a robust and unparallel featues 
set to manage the complete container lifecycle.

Kubernetes is a portable, extensible, 
open source platform for managing 
containerized workloads and services, 
that facilitates both declarative 
configuration and automation. 
It has a large, rapidly growing 
ecosystem. 
you can form a cluster and is combination of
several vm or containers

Kubernetes services, support, and 
tools are widely available.

-------------------------------------
 kubernetes installation:

installation of kubectl:

open browser and type 'install kubectl'

-click on first link

-after that, click on - install kubectl on windows

create a 'kubectl' folder in your c directory...
open cmd prompt and add a path of kubectl folder...


go to that path and use the command:-
curl.exe -LO "https://dl.k8s.io/release/v1.27.0/bin/windows/amd64/kubectl.exe"

it will start the download and we can wait to finish it.


verify with command-  "dir"

its been installed now....


2. now we can validate the binary:
it is optional 

command - curl.exe -LO "https://dl.k8s.io/v1.27.0/bin/windows/amd64/kubectl.exe.sha256"

again execute the command - CertUtil -hashfile kubectl.exe SHA256

command - type kubectl.exe.sha256

till now it is the perfect installation...

3. we need to append the path in environment variable..

search in search box as env and select 'edit environment..'
edit environment variables..

add path to environment variable:
variable name - kubectl
variable value - C:\Users\ADMIN\Documents\kubectl

on the same command prompt:
use command - kubectl version --client

use next command - 
kubectl version --client --output=yaml

---------------------------------------
install minikube

open google chrome--
type in google - install minikube

create a new folder same like above minikube

go to this folder and open the path in poweershell..
or search in search bar..

run 2 commands:
1.  
command -> New-Item -Path 'c:\' -Name 'minikube' -ItemType Directory -Force

this actually downloads the minikube
2. Invoke-WebRequest -OutFile 'c:\minikube\minikube.exe' -Uri 'https://github.com/kubernetes/minikube/releases/latest/download/minikube-windows-amd64.exe' -UseBasicParsing

3. run dir command to verify its version..

open powershell as administration...to set environmental path


copy the command & paste in powershell- 

$oldPath = [Environment]::GetEnvironmentVariable('Path', [EnvironmentVariableTarget]::Machine)
if ($oldPath.Split(';') -inotcontains 'C:\minikube'){ `
  [Environment]::SetEnvironmentVariable('Path', $('{0};C:\minikube' -f $oldPath), [EnvironmentVariableTarget]::Machine) `
}



after that we have to install the virtual box

virtual box we need higher than 5.2 version

click on the link and download here...

https://www.virtualbox.org/wiki/Downloads



why to use kubectl:-

The Kubernetes command-line tool, kubectl, 
allows you to run commands against Kubernetes 
clusters. You can use kubectl to deploy applications, 
inspect and manage cluster resources, and view logs.






why to use minikube:

Want to test Kubernetes without the effort of 
setting up a complex, production-grade cluster? 
If so, Minikube is a great solution. 
This tool provides an easy means of creating a 
local Kubernetes environment on any Linux, Mac, 
or Windows system, where you can experiment with 
and test Kubernetes deployments.

----------------


download and install oracle VM box:
just open it and open a new command prompt..


command used to start the cluster:-
type -  minikube start --driver=virtualbox
(iso image that will run in VM...)

this command will download the iso image which will
run inside the virtual box.


to make virtual box as default driver:

command - minikube config set driver virtualbox

run command - minikube status

kubectl get nodes -- to verify the nodes..

kubectl get po -a --- to access the cluster.


---------------------END-----------------------





